@model RealEstate.Models.Client

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    double lat = Model.Address.Latitude;
    double lng = Model.Address.Longitude;
    string key = ApiKeys.googleApi;
}

<h1>Index</h1>
<p>
    <a class="btn btn-primary" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
        Your Profile
    </a>
    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapsePropertyInfo" aria-expanded="false" aria-controls="collapsePropertyInfo">
        Property Information
    </button>
    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseLoanInfo" aria-expanded="false" aria-controls="collapseLoanInfo">
        Loan Information
    </button>
    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseChecklistInfo" aria-expanded="false" aria-controls="collapseChecklistInfo">
        Checklist
    </button>
</p>
<div class="collapse" id="collapseExample">
    <div class="card card-body">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FirstName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LastName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DOB)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DOB)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SocialSecurityNumber)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SocialSecurityNumber)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.EmailAddress)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.EmailAddress)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PhoneNumber)
            </dd>
        </dl>


    </div>

    <div class="collapse" id="collapsePropertyInfo">
        <div class="card card-body">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Address.StreetAddress)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Address.StreetAddress)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Address.City)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Address.City)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Address.State)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Address.State)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Address.Zip)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Address.Zip)
                </dd>
            </dl>
        </div>
    </div>
    <div class="collapse" id="collapseLoanInfo">
        <div class="card card-body">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ClosingDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ClosingDate)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.DepositAmount)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.DepositAmount)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ApprovedAmount)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ApprovedAmount)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ApprovalDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ApprovalDate)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.InspectionDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.InspectionDate)
                </dd>
            </dl>
        </div>
    </div>


    <div class="collapse" id="collapseChecklistInfo">
        <div class="card card-body">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.DepositPaid)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.DepositPaid)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.IsApproved)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.IsApproved)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.IsOfferMade)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.IsOfferMade)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.IsInspected)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.IsInspected)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.IsUnderContract)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.IsUnderContract)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.IsClearToClose)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.IsClearToClose)
                </dd>

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Checklist.IsClosed)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Checklist.IsClosed)
                </dd>
            </dl>
            </dl>
        </div>
    </div>
</div>



        
        <div>
            <a asp-action="Edit" asp-route-id="@Model.ClientId">Edit</a> |
            <a asp-action="Index">Back to List</a>
        </div>

        <!DOCTYPE html>
        <html>
        <head>
            <style>
                /* Set the size of the div element that contains the map */
                #map {
                    height: 400px; /* The height is 400 pixels */
                    width: 100%; /* The width is the width of the web page */
                }
            </style>
        </head>
        <body>
            <h3>Your Home's Map</h3>
            <!--The div element for the map -->
            <div id="map"></div>
            <script async defer>

// Initialize and add the map
function initMap() {
  // The location of Uluru
     let lat = @lat;
     let lng = @lng;
  var uluru = {lat: -25.344, lng: 131.036};
  // The map, centered at Uluru
        uluru.lat = lat;
        uluru.lng = lng;
  var map = new google.maps.Map(
      document.getElementById('map'), {zoom: 4, center: uluru});
  // The marker, positioned at Uluru
  var marker = new google.maps.Marker({position: uluru, map: map});
}
            </script>
            <!--Load the API from the specified URL
            * The async attribute allows the browser to render the page while the API loads
            * The key parameter will contain your own API key (which is not needed for this tutorial)
            * The callback parameter executes the initMap() function
            -->
            @{
                var myScriptSrc = "https://maps.googleapis.com/maps/api/js?key=" + ApiKeys.googleApi + "&callback=initMap ";

            }
            <script src="@myScriptSrc"></script>
        </body>
    </html>

